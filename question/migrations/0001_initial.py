# Generated by Django 3.1.7 on 2021-03-24 19:43

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details', models.TextField()),
                ('wrapper', models.FileField(upload_to='wrappers')),
                ('overwrite', models.BooleanField(default=False, help_text='overwrite required                                    for storing the source code')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('last_solved', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qno', models.IntegerField()),
                ('title', models.CharField(max_length=50)),
                ('text', models.TextField(default='Question text goes here')),
                ('practice', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.TextField(null=True)),
                ('source_name', models.CharField(help_text='Name of source code file', max_length=30, null=True)),
                ('correct', models.BooleanField(null=True)),
                ('stamp', models.DateTimeField(auto_now_add=True)),
                ('marks', models.FloatField()),
                ('remarks', models.TextField()),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='language', to='question.language')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player', to='question.profile')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question', to='question.question')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('infile', models.FileField(upload_to='test_cases')),
                ('outfile', models.FileField(upload_to='test_cases')),
                ('sample_code', models.FileField(upload_to='solutions')),
                ('answer_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_type', to='question.answertype')),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='question.question')),
            ],
        ),
    ]
